---
import MultipleSelectionPage from '~/layouts/MultipleSelectionPage.astro';
import { Languages, Schools, SchoolToPCs } from '~/utils/types';
import { getPCmap } from '~/utils/utils';

export async function getStaticPaths() {
	let toReturn: { params: { school: string; lang: string }; props: { school: string; language: string } }[] = [];
	for (let index = 0; index < Schools.values().length; index++) {
		const _school = Schools.values()[index];
		for (let e = 0; e < Languages.values().length; e++) {
			const _language = Languages.values()[e];
			toReturn.push({
				params: {
					school: _school,
					lang: _language,
				},
				props: {
					school: _school,
					language: _language,
				},
			});
		}
	}
	return toReturn;
}

const { language, school } = Astro.props;
const langCode = Languages.toNum(language);

let schoolsToPCs: SchoolToPCs = await getPCmap();
let this_school = schoolsToPCs.schools.find((schools) => schools.school == school);
if (this_school == null) {
	throw new Error('PC Map is invalid', this_school);
}

const coursesFiltered = this_school.courses.filter(
	(x) =>
		x != null &&
		(this_school?.courses
			.find((_course) => _course.course[langCode] == x.course[langCode])
			?.pcs.filter((pc) => pc.complete).length ?? 0) > 0
);

const buttons: { title: string[]; text: string[]; path: string }[] = coursesFiltered.map((course) => {
	return {
		title: course.course,
		text: course.desc,
		path: course.slug,
	};
});

const title = ['Consiglio ' + school, 'Suggestion' + school];
---

<MultipleSelectionPage
	language={language}
	buttons={buttons}
	title={title}
	main_text={['Scegli il tuo corso di laurea 🧑‍🏫', 'Choose your degree programme 🧑‍🏫']}
	main_title={title}
/>
