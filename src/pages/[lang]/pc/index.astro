---
import MultipleSelectionPage from '~/layouts/MultipleSelectionPage.astro';
import { Languages, SchoolToPCs } from '~/utils/types';
import { getPCmap } from '~/utils/utils';

export async function getStaticPaths() {
	return Languages.values().map((language) => {
		return {
			params: { lang: language },
			props: { language },
		};
	});
}

const schools = [
	{
		title: { it: 'IEEE 🔧', en: 'IEEE 🔧' },
		path: 'ieee',
		text: {
			it: "Scuola di Ingegneria Industriale dell'Informazione",
			en: 'School of Industrial Information Engineering',
		},
	},
	{
		title: { it: 'Design ✏️', en: 'Design ✏️' },
		path: 'design',
		text: { it: 'Scuola di Design', en: 'School of Design' },
	},
	{
		title: { it: 'Icat 🚧', en: 'Icat 🚧' },
		path: 'icat',
		text: {
			it: 'Scuola di Ingegneria Civile, Ambientale e Territoriale',
			en: 'School of Civil, Environmental and Territorial Engineering',
		},
	},
	{
		title: { it: 'Auic 📐', en: 'Auic 📐' },
		path: 'auic',
		text: {
			it: 'Scuola di Architettura Urbanistica e Ingegneria delle Costruzioni',
			en: 'School of Architecture Urban Planning and Construction Engineering',
		},
	},
];

const { language } = Astro.props;

let schoolsToPCs: SchoolToPCs = await getPCmap();
const schoolsValid = schools.filter(
	(x) =>
		(schoolsToPCs.schools
			.find((schools) => schools.school == x.path)
			?.courses.filter((_course) => _course.pcs.filter((pc) => pc.complete).length > 0).length ?? 0) > 0
);
---

<MultipleSelectionPage
	language={language}
	buttons={schoolsValid}
	title={['Computer 💻', 'Computer 💻']}
	main_text={[
		'Cerchi un computer adatto al tuo corso di laurea? Sei nel posto giusto!',
		'Are you looking for a suitable computer for your degree course? You are in the right place!',
	]}
	main_title={['Computer 💻', 'Computer 💻']}
/>
